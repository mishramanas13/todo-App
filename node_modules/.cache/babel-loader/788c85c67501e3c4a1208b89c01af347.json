{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\todo-app\\\\todo-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Fragment, useEffect, useState } from 'react';\nimport TodoItem from './components/todoItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todoItems, setTodoItems] = useState(null);\n  useEffect(() => {\n    console.log(\"hey.I've loaded up\");\n\n    if (!todoItems) {\n      fetch('http://localhost:8080/api/todoItems').then(response => response.json()).then(data => {\n        console.log(\"Todo items lists:\", data);\n        setTodoItems(data);\n      });\n    }\n  }, [todoItems]);\n\n  function addNewTodoItem() {\n    fetch('http://localhost:8080/');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewTodoItem,\n        children: \"add new item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todoItems ? todoItems.map(todoItem => {\n        return /*#__PURE__*/_jsxDEV(TodoItem, {\n          data: todoItem\n        }, todoItem.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 16\n        }, this);\n      }) : \"loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"nbebi83vcMvFDLLogeqPGMWCLC8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/HP/todo-app/todo-app/src/App.js"],"names":["Fragment","useEffect","useState","TodoItem","App","todoItems","setTodoItems","console","log","fetch","then","response","json","data","addNewTodoItem","map","todoItem","id"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAkBC,SAAlB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BJ,QAAQ,CAAC,IAAD,CAA5C;AAGDD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AAEA,QAAG,CAACH,SAAJ,EAAc;AACZI,MAAAA,KAAK,CAAC,qCAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACdN,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCK,IAAjC;AACAP,QAAAA,YAAY,CAACO,IAAD,CAAZ;AACD,OALC;AAMF;AACD,GAXQ,EAWL,CAACR,SAAD,CAXK,CAAT;;AAaE,WAASS,cAAT,GAAyB;AACtBL,IAAAA,KAAK,CAAC,wBAAD,CAAL;AACJ;;AAGA,sBACE;AAAA,4BACA;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEK,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,eAKA;AAAA,gBACGT,SAAS,GACPA,SAAS,CAACU,GAAV,CAAeC,QAAD,IAAc;AAC7B,4BAAO,QAAC,QAAD;AAA4B,UAAA,IAAI,EAAGA;AAAnC,WAAeA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFE,CADO,GAIN;AALN;AAAA;AAAA;AAAA;AAAA,YALA;AAAA,kBADF;AAeD;;GArCQb,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { Fragment,useEffect, useState } from 'react';\nimport TodoItem from './components/todoItem';\n\nfunction App() {\n  const [ todoItems, setTodoItems]  = useState(null);\n\n\n useEffect(() => {\n   console.log(\"hey.I've loaded up\");\n\n   if(!todoItems){\n     fetch('http://localhost:8080/api/todoItems')\n     .then((response) => response.json())\n     .then(data => {\n     console.log(\"Todo items lists:\", data);\n     setTodoItems(data);\n   });\n  }\n } , [todoItems] );\n\n   function addNewTodoItem(){\n      fetch('http://localhost:8080/')\n }\n\n\n  return (\n    <>\n    <div>\n      <button onClick={addNewTodoItem}>add new item</button>\n    </div>\n    \n    <div>\n      {todoItems\n       ? todoItems.map((todoItem) => {\n        return <TodoItem key={todoItem.id} data= {todoItem}/>\n      }) \n        : \"loading data...\"}\n    </div>\n    </>\n     );    \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}